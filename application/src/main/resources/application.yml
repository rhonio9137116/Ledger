server:
  port: 8080
spring:
  application:
    name: Ledger
  h2:
    console:
      enabled: true
      path: /h2-console
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driverClassName: org.h2.Driver
    username: sa
    password:
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    open-in-view: false
    defer-datasource-initialization: true
  kafka:
    bootstrap-servers: localhost:9092
    properties:
      auto.register.schemas: true
      schema.registry.url: mock://mockurl
    consumer:
      group-id: ledger
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
topic:
  partitions-num: 1
  replication-factor: 1
  postingEventRequest:
    name: postingEventRequestTopic
  postingEventProvided:
    name: postingEventProvidedTopic
  assetPriceEventProvided:
    name: assetPriceEventProvidedTopic
  walletBalanceEventProvided:
    name: walletBalanceEventProvidedTopic
springdoc:
  api-docs:
    enabled=false: