/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.example.ledger.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class WalletBalanceEventProvided extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8529759254368266420L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"WalletBalanceEventProvided\",\"namespace\":\"com.example.ledger.avro\",\"fields\":[{\"name\":\"walletId\",\"type\":\"long\"},{\"name\":\"walletName\",\"type\":\"string\"},{\"name\":\"userId\",\"type\":\"long\"},{\"name\":\"balance\",\"type\":\"double\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<WalletBalanceEventProvided> ENCODER =
      new BinaryMessageEncoder<WalletBalanceEventProvided>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<WalletBalanceEventProvided> DECODER =
      new BinaryMessageDecoder<WalletBalanceEventProvided>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<WalletBalanceEventProvided> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<WalletBalanceEventProvided> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<WalletBalanceEventProvided>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this WalletBalanceEventProvided to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a WalletBalanceEventProvided from a ByteBuffer. */
  public static WalletBalanceEventProvided fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public long walletId;
  @Deprecated public java.lang.CharSequence walletName;
  @Deprecated public long userId;
  @Deprecated public double balance;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public WalletBalanceEventProvided() {}

  /**
   * All-args constructor.
   * @param walletId The new value for walletId
   * @param walletName The new value for walletName
   * @param userId The new value for userId
   * @param balance The new value for balance
   */
  public WalletBalanceEventProvided(java.lang.Long walletId, java.lang.CharSequence walletName, java.lang.Long userId, java.lang.Double balance) {
    this.walletId = walletId;
    this.walletName = walletName;
    this.userId = userId;
    this.balance = balance;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return walletId;
    case 1: return walletName;
    case 2: return userId;
    case 3: return balance;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: walletId = (java.lang.Long)value$; break;
    case 1: walletName = (java.lang.CharSequence)value$; break;
    case 2: userId = (java.lang.Long)value$; break;
    case 3: balance = (java.lang.Double)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'walletId' field.
   * @return The value of the 'walletId' field.
   */
  public java.lang.Long getWalletId() {
    return walletId;
  }

  /**
   * Sets the value of the 'walletId' field.
   * @param value the value to set.
   */
  public void setWalletId(java.lang.Long value) {
    this.walletId = value;
  }

  /**
   * Gets the value of the 'walletName' field.
   * @return The value of the 'walletName' field.
   */
  public java.lang.CharSequence getWalletName() {
    return walletName;
  }

  /**
   * Sets the value of the 'walletName' field.
   * @param value the value to set.
   */
  public void setWalletName(java.lang.CharSequence value) {
    this.walletName = value;
  }

  /**
   * Gets the value of the 'userId' field.
   * @return The value of the 'userId' field.
   */
  public java.lang.Long getUserId() {
    return userId;
  }

  /**
   * Sets the value of the 'userId' field.
   * @param value the value to set.
   */
  public void setUserId(java.lang.Long value) {
    this.userId = value;
  }

  /**
   * Gets the value of the 'balance' field.
   * @return The value of the 'balance' field.
   */
  public java.lang.Double getBalance() {
    return balance;
  }

  /**
   * Sets the value of the 'balance' field.
   * @param value the value to set.
   */
  public void setBalance(java.lang.Double value) {
    this.balance = value;
  }

  /**
   * Creates a new WalletBalanceEventProvided RecordBuilder.
   * @return A new WalletBalanceEventProvided RecordBuilder
   */
  public static com.example.ledger.avro.WalletBalanceEventProvided.Builder newBuilder() {
    return new com.example.ledger.avro.WalletBalanceEventProvided.Builder();
  }

  /**
   * Creates a new WalletBalanceEventProvided RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new WalletBalanceEventProvided RecordBuilder
   */
  public static com.example.ledger.avro.WalletBalanceEventProvided.Builder newBuilder(com.example.ledger.avro.WalletBalanceEventProvided.Builder other) {
    return new com.example.ledger.avro.WalletBalanceEventProvided.Builder(other);
  }

  /**
   * Creates a new WalletBalanceEventProvided RecordBuilder by copying an existing WalletBalanceEventProvided instance.
   * @param other The existing instance to copy.
   * @return A new WalletBalanceEventProvided RecordBuilder
   */
  public static com.example.ledger.avro.WalletBalanceEventProvided.Builder newBuilder(com.example.ledger.avro.WalletBalanceEventProvided other) {
    return new com.example.ledger.avro.WalletBalanceEventProvided.Builder(other);
  }

  /**
   * RecordBuilder for WalletBalanceEventProvided instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<WalletBalanceEventProvided>
    implements org.apache.avro.data.RecordBuilder<WalletBalanceEventProvided> {

    private long walletId;
    private java.lang.CharSequence walletName;
    private long userId;
    private double balance;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.example.ledger.avro.WalletBalanceEventProvided.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.walletId)) {
        this.walletId = data().deepCopy(fields()[0].schema(), other.walletId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.walletName)) {
        this.walletName = data().deepCopy(fields()[1].schema(), other.walletName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.userId)) {
        this.userId = data().deepCopy(fields()[2].schema(), other.userId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.balance)) {
        this.balance = data().deepCopy(fields()[3].schema(), other.balance);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing WalletBalanceEventProvided instance
     * @param other The existing instance to copy.
     */
    private Builder(com.example.ledger.avro.WalletBalanceEventProvided other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.walletId)) {
        this.walletId = data().deepCopy(fields()[0].schema(), other.walletId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.walletName)) {
        this.walletName = data().deepCopy(fields()[1].schema(), other.walletName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.userId)) {
        this.userId = data().deepCopy(fields()[2].schema(), other.userId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.balance)) {
        this.balance = data().deepCopy(fields()[3].schema(), other.balance);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'walletId' field.
      * @return The value.
      */
    public java.lang.Long getWalletId() {
      return walletId;
    }

    /**
      * Sets the value of the 'walletId' field.
      * @param value The value of 'walletId'.
      * @return This builder.
      */
    public com.example.ledger.avro.WalletBalanceEventProvided.Builder setWalletId(long value) {
      validate(fields()[0], value);
      this.walletId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'walletId' field has been set.
      * @return True if the 'walletId' field has been set, false otherwise.
      */
    public boolean hasWalletId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'walletId' field.
      * @return This builder.
      */
    public com.example.ledger.avro.WalletBalanceEventProvided.Builder clearWalletId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'walletName' field.
      * @return The value.
      */
    public java.lang.CharSequence getWalletName() {
      return walletName;
    }

    /**
      * Sets the value of the 'walletName' field.
      * @param value The value of 'walletName'.
      * @return This builder.
      */
    public com.example.ledger.avro.WalletBalanceEventProvided.Builder setWalletName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.walletName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'walletName' field has been set.
      * @return True if the 'walletName' field has been set, false otherwise.
      */
    public boolean hasWalletName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'walletName' field.
      * @return This builder.
      */
    public com.example.ledger.avro.WalletBalanceEventProvided.Builder clearWalletName() {
      walletName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'userId' field.
      * @return The value.
      */
    public java.lang.Long getUserId() {
      return userId;
    }

    /**
      * Sets the value of the 'userId' field.
      * @param value The value of 'userId'.
      * @return This builder.
      */
    public com.example.ledger.avro.WalletBalanceEventProvided.Builder setUserId(long value) {
      validate(fields()[2], value);
      this.userId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'userId' field has been set.
      * @return True if the 'userId' field has been set, false otherwise.
      */
    public boolean hasUserId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'userId' field.
      * @return This builder.
      */
    public com.example.ledger.avro.WalletBalanceEventProvided.Builder clearUserId() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'balance' field.
      * @return The value.
      */
    public java.lang.Double getBalance() {
      return balance;
    }

    /**
      * Sets the value of the 'balance' field.
      * @param value The value of 'balance'.
      * @return This builder.
      */
    public com.example.ledger.avro.WalletBalanceEventProvided.Builder setBalance(double value) {
      validate(fields()[3], value);
      this.balance = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'balance' field has been set.
      * @return True if the 'balance' field has been set, false otherwise.
      */
    public boolean hasBalance() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'balance' field.
      * @return This builder.
      */
    public com.example.ledger.avro.WalletBalanceEventProvided.Builder clearBalance() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public WalletBalanceEventProvided build() {
      try {
        WalletBalanceEventProvided record = new WalletBalanceEventProvided();
        record.walletId = fieldSetFlags()[0] ? this.walletId : (java.lang.Long) defaultValue(fields()[0]);
        record.walletName = fieldSetFlags()[1] ? this.walletName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.userId = fieldSetFlags()[2] ? this.userId : (java.lang.Long) defaultValue(fields()[2]);
        record.balance = fieldSetFlags()[3] ? this.balance : (java.lang.Double) defaultValue(fields()[3]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<WalletBalanceEventProvided>
    WRITER$ = (org.apache.avro.io.DatumWriter<WalletBalanceEventProvided>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<WalletBalanceEventProvided>
    READER$ = (org.apache.avro.io.DatumReader<WalletBalanceEventProvided>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
