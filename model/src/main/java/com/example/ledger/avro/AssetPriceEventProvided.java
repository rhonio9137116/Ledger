/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.example.ledger.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class AssetPriceEventProvided extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 7422219602791646214L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AssetPriceEventProvided\",\"namespace\":\"com.example.ledger.avro\",\"fields\":[{\"name\":\"assetId\",\"type\":\"long\"},{\"name\":\"assetName\",\"type\":\"string\"},{\"name\":\"unitPrice\",\"type\":\"float\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AssetPriceEventProvided> ENCODER =
      new BinaryMessageEncoder<AssetPriceEventProvided>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AssetPriceEventProvided> DECODER =
      new BinaryMessageDecoder<AssetPriceEventProvided>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<AssetPriceEventProvided> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<AssetPriceEventProvided> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AssetPriceEventProvided>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this AssetPriceEventProvided to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a AssetPriceEventProvided from a ByteBuffer. */
  public static AssetPriceEventProvided fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public long assetId;
  @Deprecated public java.lang.CharSequence assetName;
  @Deprecated public float unitPrice;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AssetPriceEventProvided() {}

  /**
   * All-args constructor.
   * @param assetId The new value for assetId
   * @param assetName The new value for assetName
   * @param unitPrice The new value for unitPrice
   */
  public AssetPriceEventProvided(java.lang.Long assetId, java.lang.CharSequence assetName, java.lang.Float unitPrice) {
    this.assetId = assetId;
    this.assetName = assetName;
    this.unitPrice = unitPrice;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return assetId;
    case 1: return assetName;
    case 2: return unitPrice;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: assetId = (java.lang.Long)value$; break;
    case 1: assetName = (java.lang.CharSequence)value$; break;
    case 2: unitPrice = (java.lang.Float)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'assetId' field.
   * @return The value of the 'assetId' field.
   */
  public java.lang.Long getAssetId() {
    return assetId;
  }

  /**
   * Sets the value of the 'assetId' field.
   * @param value the value to set.
   */
  public void setAssetId(java.lang.Long value) {
    this.assetId = value;
  }

  /**
   * Gets the value of the 'assetName' field.
   * @return The value of the 'assetName' field.
   */
  public java.lang.CharSequence getAssetName() {
    return assetName;
  }

  /**
   * Sets the value of the 'assetName' field.
   * @param value the value to set.
   */
  public void setAssetName(java.lang.CharSequence value) {
    this.assetName = value;
  }

  /**
   * Gets the value of the 'unitPrice' field.
   * @return The value of the 'unitPrice' field.
   */
  public java.lang.Float getUnitPrice() {
    return unitPrice;
  }

  /**
   * Sets the value of the 'unitPrice' field.
   * @param value the value to set.
   */
  public void setUnitPrice(java.lang.Float value) {
    this.unitPrice = value;
  }

  /**
   * Creates a new AssetPriceEventProvided RecordBuilder.
   * @return A new AssetPriceEventProvided RecordBuilder
   */
  public static com.example.ledger.avro.AssetPriceEventProvided.Builder newBuilder() {
    return new com.example.ledger.avro.AssetPriceEventProvided.Builder();
  }

  /**
   * Creates a new AssetPriceEventProvided RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AssetPriceEventProvided RecordBuilder
   */
  public static com.example.ledger.avro.AssetPriceEventProvided.Builder newBuilder(com.example.ledger.avro.AssetPriceEventProvided.Builder other) {
    return new com.example.ledger.avro.AssetPriceEventProvided.Builder(other);
  }

  /**
   * Creates a new AssetPriceEventProvided RecordBuilder by copying an existing AssetPriceEventProvided instance.
   * @param other The existing instance to copy.
   * @return A new AssetPriceEventProvided RecordBuilder
   */
  public static com.example.ledger.avro.AssetPriceEventProvided.Builder newBuilder(com.example.ledger.avro.AssetPriceEventProvided other) {
    return new com.example.ledger.avro.AssetPriceEventProvided.Builder(other);
  }

  /**
   * RecordBuilder for AssetPriceEventProvided instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AssetPriceEventProvided>
    implements org.apache.avro.data.RecordBuilder<AssetPriceEventProvided> {

    private long assetId;
    private java.lang.CharSequence assetName;
    private float unitPrice;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.example.ledger.avro.AssetPriceEventProvided.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.assetId)) {
        this.assetId = data().deepCopy(fields()[0].schema(), other.assetId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.assetName)) {
        this.assetName = data().deepCopy(fields()[1].schema(), other.assetName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.unitPrice)) {
        this.unitPrice = data().deepCopy(fields()[2].schema(), other.unitPrice);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing AssetPriceEventProvided instance
     * @param other The existing instance to copy.
     */
    private Builder(com.example.ledger.avro.AssetPriceEventProvided other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.assetId)) {
        this.assetId = data().deepCopy(fields()[0].schema(), other.assetId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.assetName)) {
        this.assetName = data().deepCopy(fields()[1].schema(), other.assetName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.unitPrice)) {
        this.unitPrice = data().deepCopy(fields()[2].schema(), other.unitPrice);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'assetId' field.
      * @return The value.
      */
    public java.lang.Long getAssetId() {
      return assetId;
    }

    /**
      * Sets the value of the 'assetId' field.
      * @param value The value of 'assetId'.
      * @return This builder.
      */
    public com.example.ledger.avro.AssetPriceEventProvided.Builder setAssetId(long value) {
      validate(fields()[0], value);
      this.assetId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'assetId' field has been set.
      * @return True if the 'assetId' field has been set, false otherwise.
      */
    public boolean hasAssetId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'assetId' field.
      * @return This builder.
      */
    public com.example.ledger.avro.AssetPriceEventProvided.Builder clearAssetId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'assetName' field.
      * @return The value.
      */
    public java.lang.CharSequence getAssetName() {
      return assetName;
    }

    /**
      * Sets the value of the 'assetName' field.
      * @param value The value of 'assetName'.
      * @return This builder.
      */
    public com.example.ledger.avro.AssetPriceEventProvided.Builder setAssetName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.assetName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'assetName' field has been set.
      * @return True if the 'assetName' field has been set, false otherwise.
      */
    public boolean hasAssetName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'assetName' field.
      * @return This builder.
      */
    public com.example.ledger.avro.AssetPriceEventProvided.Builder clearAssetName() {
      assetName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'unitPrice' field.
      * @return The value.
      */
    public java.lang.Float getUnitPrice() {
      return unitPrice;
    }

    /**
      * Sets the value of the 'unitPrice' field.
      * @param value The value of 'unitPrice'.
      * @return This builder.
      */
    public com.example.ledger.avro.AssetPriceEventProvided.Builder setUnitPrice(float value) {
      validate(fields()[2], value);
      this.unitPrice = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'unitPrice' field has been set.
      * @return True if the 'unitPrice' field has been set, false otherwise.
      */
    public boolean hasUnitPrice() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'unitPrice' field.
      * @return This builder.
      */
    public com.example.ledger.avro.AssetPriceEventProvided.Builder clearUnitPrice() {
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AssetPriceEventProvided build() {
      try {
        AssetPriceEventProvided record = new AssetPriceEventProvided();
        record.assetId = fieldSetFlags()[0] ? this.assetId : (java.lang.Long) defaultValue(fields()[0]);
        record.assetName = fieldSetFlags()[1] ? this.assetName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.unitPrice = fieldSetFlags()[2] ? this.unitPrice : (java.lang.Float) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AssetPriceEventProvided>
    WRITER$ = (org.apache.avro.io.DatumWriter<AssetPriceEventProvided>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AssetPriceEventProvided>
    READER$ = (org.apache.avro.io.DatumReader<AssetPriceEventProvided>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
